LIB "primdec.lib";
option(redSB);
proc exp(list #){
	poly arr=1;
	int @i,@j;
	list expCont;
	for(@i=1;@i<=size(#);@i++){
		arr=arr*#[@i];
	}
	module M=mstd(syz(jacob(arr)))[2];
	for(@i=1;@i<=size(M);@i++){
		for(@j=1;@j<=size(#);@j++){
			if(deg(M[@i][@j])>0){
				expCont=insert(expCont,deg(M[@i][@j]),size(expCont));
				break;
			}
		}
	}
return(expCont);
}
ring R=(0,e),(t,z1,z2,z3,x,y,z),dp;
minpoly=e16+8e14+112e12+656e10+14152e8+28448e6-110144e4-48064e2+595984; //e=sqrt(-3)+sqrt(2)+sqrt[4](3)
number s3=(1657e15+15015e13+203252e11+1323270e9+25135124e7+76223084e5-63691504e3+192047288e)/472093440; //sqrt(-3)
number s2=-(2007e15+11340e13+200802e11+854620e9+26654124e7-4963056e5-172850904e3+176823408e)/229994240; //sqrt(2)
number s4=(9358e15+31395e13+793898e11+1637610e9+112388696e7-328359556e5-1106209336e3+2443397960e)/1793955072; //sqrt[4](3)
number eps=1/2*(1+s3);

list Con=-t^2*z1^4*x*z-6*t*z1^3*x^2+t^2*z1^2*y^2-6*t*z1^3*z^2+15*t*z1^2*x*y+15*t*z1^2*y*z+9*z1^2*x^2-18*t*z1*y^2-18*z1^2*x*z+9*z1^2*z^2+18*z1*x*y+18*z1*y*z-36*y^2,-t^2*z2^4*x*z-6*t*z2^3*x^2+t^2*z2^2*y^2-6*t*z2^3*z^2+15*t*z2^2*x*y+15*t*z2^2*y*z+9*z2^2*x^2-18*t*z2*y^2-18*z2^2*x*z+9*z2^2*z^2+18*z2*x*y+18*z2*y*z-36*y^2,-t^2*z3^4*x*z-6*t*z3^3*x^2+t^2*z3^2*y^2-6*t*z3^3*z^2+15*t*z3^2*x*y+15*t*z3^2*y*z+9*z3^2*x^2-18*t*z3*y^2-18*z3^2*x*z+9*z3^2*z^2+18*z3*x*y+18*z3*y*z-36*y^2,-t^2*z1^4*y*z+t^2*z1^2*x^2-6*t*z1^3*y^2-6*t*z1^3*z^2+15*t*z1^2*x*y+15*t*z1^2*x*z-18*t*z1*x^2+9*z1^2*y^2-18*z1^2*y*z+9*z1^2*z^2+18*z1*x*y+18*z1*x*z-36*x^2,-t^2*z2^4*y*z+t^2*z2^2*x^2-6*t*z2^3*y^2-6*t*z2^3*z^2+15*t*z2^2*x*y+15*t*z2^2*x*z-18*t*z2*x^2+9*z2^2*y^2-18*z2^2*y*z+9*z2^2*z^2+18*z2*x*y+18*z2*x*z-36*x^2,-t^2*z3^4*y*z+t^2*z3^2*x^2-6*t*z3^3*y^2-6*t*z3^3*z^2+15*t*z3^2*x*y+15*t*z3^2*x*z-18*t*z3*x^2+9*z3^2*y^2-18*z3^2*y*z+9*z3^2*z^2+18*z3*x*y+18*z3*x*z-36*x^2,(-eps+1)*t^2*z1^4*x*y-6*t*z1^3*x^2+(6*eps)*t*z1^3*y^2+(eps-1)*t^2*z1^2*z^2+(-15*eps)*t*z1^2*x*z+15*t*z1^2*y*z+9*z1^2*x^2+(-18*eps+18)*z1^2*x*y+(-9*eps)*z1^2*y^2+(-18*eps+18)*t*z1*z^2+(-18*eps)*z1*x*z+18*z1*y*z+(-36*eps+36)*z^2,(-eps+1)*t^2*z2^4*x*y-6*t*z2^3*x^2+(6*eps)*t*z2^3*y^2+(eps-1)*t^2*z2^2*z^2+(-15*eps)*t*z2^2*x*z+15*t*z2^2*y*z+9*z2^2*x^2+(-18*eps+18)*z2^2*x*y+(-9*eps)*z2^2*y^2+(-18*eps+18)*t*z2*z^2+(-18*eps)*z2*x*z+18*z2*y*z+(-36*eps+36)*z^2,(-eps+1)*t^2*z3^4*x*y-6*t*z3^3*x^2+(6*eps)*t*z3^3*y^2+(eps-1)*t^2*z3^2*z^2+(-15*eps)*t*z3^2*x*z+15*t*z3^2*y*z+9*z3^2*x^2+(-18*eps+18)*z3^2*x*y+(-9*eps)*z3^2*y^2+(-18*eps+18)*t*z3*z^2+(-18*eps)*z3*x*z+18*z3*y*z+(-36*eps+36)*z^2,-t^2*z1^4*x*y-6*t*z1^3*x^2-6*t*z1^3*y^2+t^2*z1^2*z^2+15*t*z1^2*x*z+15*t*z1^2*y*z+9*z1^2*x^2-18*z1^2*x*y+9*z1^2*y^2-18*t*z1*z^2+18*z1*x*z+18*z1*y*z-36*z^2,-t^2*z2^4*x*y-6*t*z2^3*x^2-6*t*z2^3*y^2+t^2*z2^2*z^2+15*t*z2^2*x*z+15*t*z2^2*y*z+9*z2^2*x^2-18*z2^2*x*y+9*z2^2*y^2-18*t*z2*z^2+18*z2*x*z+18*z2*y*z-36*z^2,-t^2*z3^4*x*y-6*t*z3^3*x^2-6*t*z3^3*y^2+t^2*z3^2*z^2+15*t*z3^2*x*z+15*t*z3^2*y*z+9*z3^2*x^2-18*z3^2*x*y+9*z3^2*y^2-18*t*z3*z^2+18*z3*x*z+18*z3*y*z-36*z^2,(-eps+1)*t^2*z1^4*x*z-6*t*z1^3*x^2+(eps-1)*t^2*z1^2*y^2+(6*eps)*t*z1^3*z^2+(-15*eps)*t*z1^2*x*y+15*t*z1^2*y*z+9*z1^2*x^2+(-18*eps+18)*t*z1*y^2+(-18*eps+18)*z1^2*x*z+(-9*eps)*z1^2*z^2+(-18*eps)*z1*x*y+18*z1*y*z+(-36*eps+36)*y^2,(-eps+1)*t^2*z2^4*x*z-6*t*z2^3*x^2+(eps-1)*t^2*z2^2*y^2+(6*eps)*t*z2^3*z^2+(-15*eps)*t*z2^2*x*y+15*t*z2^2*y*z+9*z2^2*x^2+(-18*eps+18)*t*z2*y^2+(-18*eps+18)*z2^2*x*z+(-9*eps)*z2^2*z^2+(-18*eps)*z2*x*y+18*z2*y*z+(-36*eps+36)*y^2,(-eps+1)*t^2*z3^4*x*z-6*t*z3^3*x^2+(eps-1)*t^2*z3^2*y^2+(6*eps)*t*z3^3*z^2+(-15*eps)*t*z3^2*x*y+15*t*z3^2*y*z+9*z3^2*x^2+(-18*eps+18)*t*z3*y^2+(-18*eps+18)*z3^2*x*z+(-9*eps)*z3^2*z^2+(-18*eps)*z3*x*y+18*z3*y*z+(-36*eps+36)*y^2,(-eps+1)*t^2*z1^4*y*z+(eps-1)*t^2*z1^2*x^2-6*t*z1^3*y^2+(6*eps)*t*z1^3*z^2+(-15*eps)*t*z1^2*x*y+15*t*z1^2*x*z+(-18*eps+18)*t*z1*x^2+9*z1^2*y^2+(-18*eps+18)*z1^2*y*z+(-9*eps)*z1^2*z^2+(-18*eps)*z1*x*y+18*z1*x*z+(-36*eps+36)*x^2,(-eps+1)*t^2*z2^4*y*z+(eps-1)*t^2*z2^2*x^2-6*t*z2^3*y^2+(6*eps)*t*z2^3*z^2+(-15*eps)*t*z2^2*x*y+15*t*z2^2*x*z+(-18*eps+18)*t*z2*x^2+9*z2^2*y^2+(-18*eps+18)*z2^2*y*z+(-9*eps)*z2^2*z^2+(-18*eps)*z2*x*y+18*z2*x*z+(-36*eps+36)*x^2,(-eps+1)*t^2*z3^4*y*z+(eps-1)*t^2*z3^2*x^2-6*t*z3^3*y^2+(6*eps)*t*z3^3*z^2+(-15*eps)*t*z3^2*x*y+15*t*z3^2*x*z+(-18*eps+18)*t*z3*x^2+9*z3^2*y^2+(-18*eps+18)*z3^2*y*z+(-9*eps)*z3^2*z^2+(-18*eps)*z3*x*y+18*z3*x*z+(-36*eps+36)*x^2,(eps)*t^2*z1^4*x*z-6*t*z1^3*x^2+(-eps)*t^2*z1^2*y^2+(-6*eps+6)*t*z1^3*z^2+(15*eps-15)*t*z1^2*x*y+15*t*z1^2*y*z+9*z1^2*x^2+(18*eps)*t*z1*y^2+(18*eps)*z1^2*x*z+(9*eps-9)*z1^2*z^2+(18*eps-18)*z1*x*y+18*z1*y*z+(36*eps)*y^2,(eps)*t^2*z2^4*x*z-6*t*z2^3*x^2+(-eps)*t^2*z2^2*y^2+(-6*eps+6)*t*z2^3*z^2+(15*eps-15)*t*z2^2*x*y+15*t*z2^2*y*z+9*z2^2*x^2+(18*eps)*t*z2*y^2+(18*eps)*z2^2*x*z+(9*eps-9)*z2^2*z^2+(18*eps-18)*z2*x*y+18*z2*y*z+(36*eps)*y^2,(eps)*t^2*z3^4*x*z-6*t*z3^3*x^2+(-eps)*t^2*z3^2*y^2+(-6*eps+6)*t*z3^3*z^2+(15*eps-15)*t*z3^2*x*y+15*t*z3^2*y*z+9*z3^2*x^2+(18*eps)*t*z3*y^2+(18*eps)*z3^2*x*z+(9*eps-9)*z3^2*z^2+(18*eps-18)*z3*x*y+18*z3*y*z+(36*eps)*y^2,(eps)*t^2*z1^4*x*y-6*t*z1^3*x^2+(-6*eps+6)*t*z1^3*y^2+(-eps)*t^2*z1^2*z^2+(15*eps-15)*t*z1^2*x*z+15*t*z1^2*y*z+9*z1^2*x^2+(18*eps)*z1^2*x*y+(9*eps-9)*z1^2*y^2+(18*eps)*t*z1*z^2+(18*eps-18)*z1*x*z+18*z1*y*z+(36*eps)*z^2,(eps)*t^2*z2^4*x*y-6*t*z2^3*x^2+(-6*eps+6)*t*z2^3*y^2+(-eps)*t^2*z2^2*z^2+(15*eps-15)*t*z2^2*x*z+15*t*z2^2*y*z+9*z2^2*x^2+(18*eps)*z2^2*x*y+(9*eps-9)*z2^2*y^2+(18*eps)*t*z2*z^2+(18*eps-18)*z2*x*z+18*z2*y*z+(36*eps)*z^2,(eps)*t^2*z3^4*x*y-6*t*z3^3*x^2+(-6*eps+6)*t*z3^3*y^2+(-eps)*t^2*z3^2*z^2+(15*eps-15)*t*z3^2*x*z+15*t*z3^2*y*z+9*z3^2*x^2+(18*eps)*z3^2*x*y+(9*eps-9)*z3^2*y^2+(18*eps)*t*z3*z^2+(18*eps-18)*z3*x*z+18*z3*y*z+(36*eps)*z^2,(-eps+1)*t^2*z1^4*y*z+(eps-1)*t^2*z1^2*x^2+(6*eps)*t*z1^3*y^2-6*t*z1^3*z^2+15*t*z1^2*x*y+(-15*eps)*t*z1^2*x*z+(-18*eps+18)*t*z1*x^2+(-9*eps)*z1^2*y^2+(-18*eps+18)*z1^2*y*z+9*z1^2*z^2+18*z1*x*y+(-18*eps)*z1*x*z+(-36*eps+36)*x^2,(-eps+1)*t^2*z2^4*y*z+(eps-1)*t^2*z2^2*x^2+(6*eps)*t*z2^3*y^2-6*t*z2^3*z^2+15*t*z2^2*x*y+(-15*eps)*t*z2^2*x*z+(-18*eps+18)*t*z2*x^2+(-9*eps)*z2^2*y^2+(-18*eps+18)*z2^2*y*z+9*z2^2*z^2+18*z2*x*y+(-18*eps)*z2*x*z+(-36*eps+36)*x^2,(-eps+1)*t^2*z3^4*y*z+(eps-1)*t^2*z3^2*x^2+(6*eps)*t*z3^3*y^2-6*t*z3^3*z^2+15*t*z3^2*x*y+(-15*eps)*t*z3^2*x*z+(-18*eps+18)*t*z3*x^2+(-9*eps)*z3^2*y^2+(-18*eps+18)*z3^2*y*z+9*z3^2*z^2+18*z3*x*y+(-18*eps)*z3*x*z+(-36*eps+36)*x^2;

Con=substitute(Con,t,-3+3*s4^2,z1,1-s4^2,z2,-1/2+1/2*s4^2-(s3*s4)/s2,z3,-1/2+1/2*s4^2+(s3*s4)/s2);

ring S=(0,e),(x,y,z),dp;
minpoly=e16+8e14+112e12+656e10+14152e8+28448e6-110144e4-48064e2+595984;
number s4=imap(R,s4);
poly F=x3+y3+z3+(-3+3*s4^2)*xyz;
list Con=imap(R,Con);
int i,j,k; int cnt=0;

"**********************************************";
"            conics equations                  ";
"**********************************************";
"";
for(i=1;i<=size(Con);i++){
"C("+string(i)+")= "+string(std(Con[i]));
}
"";
"after every pause, press enter to resume";
"";
pause();

for(i=1;i<=size(Con);i++){
"exponents of {F,C("+string(i)+")}: "+string(exp(F,Con[i]));
}
pause();
for(i=1;i<=size(Con)-1;i++){
	for(j=i+1;j<=size(Con);j++){
		"exponents of {F,C("+string(i)+"),C("+string(j)+")}: "+string(exp(F,Con[i],Con[j]));
		cnt++;
		if(cnt==30){
			pause(); cnt=0;
		}
	}
}
pause();
cnt=0;
for(i=1;i<=size(Con)-2;i++){
	for(j=i+1;j<=size(Con)-1;j++){
		for(k=j+1;k<=size(Con);k++){
			"exponents of {F,C("+string(i)+"),C("+string(j)+"),C("+string(k)+")}: "+string(exp(F,Con[i],Con[j],Con[k]));
			cnt++;
			 if(cnt==30){
				pause(); cnt=0;
			}
		}
	}
}